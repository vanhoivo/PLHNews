# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false
# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "mycontact"
#spring.datasource.url=jdbc:mysql://aa1qjaxshogytf9.chxa68oiczll.us-west-2.rds.amazonaws.com:3306/quanlixemtintuc?useSSL=false
spring.datasource.url=jdbc:mysql://localhost:3306/quanlixemtintuc?useSSL=false
#spring.datasource.url=jdbc:mysql://35.225.195.248:3306/quanlixemtintuc?useSSL=false
#spring.datasource.url=jdbc:mysql://35.225.195.248:3306/quanlixemtintuc?cloudSqlInstance=plhnews:us-central1:newsapp&amp;socketFactory=com.google.cloud.sql.mysql.SocketFactory&amp;user=root&amp;password=123456

# MySQL username and password 
spring.datasource.username=root
spring.datasource.password=123456

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.dbcp.test-while-idle=true
spring.datasource.dbcp.validation-query=SELECT 1

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect